---
title: "Superset guide"
format: html
---

A quick guide for an magasin administrator on superset.
      
## Backup the superset database into the local filesystem 

A dump (backup) of the database may be useful when a new version of superset is going to be installed, or to keep a regular scheduled backup of the superset data.

To create a dump of the database, you can use the script `scripts/superset/dump-superset-db.sh`:

```sh
./dump-superset-db.sh -n magasin-superset-prd`
```

Where the option `-n` is to specify the namespace of the superset instance (defaults to `magasin-superset`).

This script will request request the password of the `superset` user, to perform the dump. You can get the password from the secret `superset-env` within the same namespace.

The output of running this script is the file `superset_dump.sql` in the current working folder.  Note that this script assumes that the name of the database is `superset`.

Alternatively, these are the manual steps to do the same:

1. Launch a terminal in the posgresql pod (replace the namespace if required)
 
    ```sh
     kubectl exec superset-postgresql-0 -ti --namespace magasin-superset -- /bin/bash
    ```

2. Within the pod shell, extract and compress the data. The below command will ask for the superset database password (you can find it in the superset-env secret, defaults to `superset`)

    ```sh
    pg_dump -U superset -d superset > /tmp/superset_dump.sql
    # where -U is the username of the database, and -d is the database name.
    
    tar -C /tmp -czvf /tmp/supserset_dump.tgz supserset_dump.sql
    # where -C is to use /tmp as base folder -c collect, z zip, v=verboze and f output file
    ```

3. Exit the pod shell and copy the dump file into `/tmp` in the local filesystem of the pod.
exit

    ```sh
    # Exit the pod shell
    exit
    
    # Copy the tgz to the local environment.
    kubectl cp magasin-superset/superset-postgresql-0:/tmp/superset_dump.tgz \
    ./supserset_dump.tgz --retries 100
    
    # Syntax: kubectl cp namespace/pod:path local-path. 
    # The option --retries is to fix potential network issues
    ```

4. Lastly, delete the db dump from the postgres pod
    
    ```sh
    kubectl exec magasin-superset/superset-postgresql-0 -- \
    rm /tmp/supeset_dump.tgz /tmp/superset_dump.sql  
    ```

### Restore superset database from local filesystem

To restore the database from the previous step.

1.  Copy the database to the postgres pod.

    ```sh
    kubectl cp superset_dump.sql magasin-superset/superset-postgresql-0:/tmp/superset_dump.sql
    ```

2. Launch the shell

    ```sh
    kubectl exec superset-postgresql-0 -ti --namespace magasin-superset -- /bin/bash
    ```

3. If the database exist, you may need to drop it first

    ```sh
    psql --username postgres
    ```

4. The password can be found in `superset-postgresql` secret `postgres-password` 

5. If you get an error indicating the database is being used run the command:

    ```sql

    SELECT pg_terminate_backend(pg_stat_activity.pid) 
        FROM pg_stat_activity 
        WHERE pg_stat_activity.datname = 'superset' AND pid <> pg_backend_pid();

    -- To delete the superset database: (don't forget the ; at the end)
    DROP DATABASE superset;

    --- Then create an empty database (don't forget the ; at the end)
    CREATE DATABASE superset;
    
    -- Then quit psql
    \q
    ```
6. Finally, restore the database

    ```sh
    psql --username superset --dbname superset -f /tmp/superset_dump.sql
    ```
    
    Or alternatively less verbose option
    
    ```sh
    psql -U superset -d superset2 -f ./tmp/superset_dump.sql
    ```

Now, you can restart the superset pod. First find the superset-xxxxxxxxx-xxxxx and delete it

```sh
kubectl get pods --namespace magasin-superset

NAME                               READY   STATUS      RESTARTS   AGE
superset-75b79c6c8d-jttd9          1/1     Running     0          62m
superset-init-db-bhc25             0/1     Completed   0          62m
superset-postgresql-0              1/1     Running     0          62m
superset-redis-master-0            1/1     Running     0          62m
superset-worker-85dfbb48dd-6bhjp   1/1     Running     0          62m
```

```sh
kubectl delete pod superset-75b79c6c8d-jttd9 
```


## PostgreSQL

* Get list of databases

    ```sql
    SELECT datname FROM pg_database WHERE datistemplate = false;
    ```

* Get the user owner of database 'database_name'

    ```sql
    SELECT d.datname as "Name",
    pg_catalog.pg_get_userbyid(d.datdba) as "Owner"
    FROM pg_catalog.pg_database d
    WHERE d.datname = 'database_name'
    ORDER BY 1;
    ```

## Troubleshooting

* **Get the events of a pod**

    ```sh
    kubectl describe pod superset-564564dd4-2lzb6 --namespace magasin-superset
    ```

* **Get logs of the containers**

    ```sh
    kubectl logs <podname> -f --namespace <namespace> 
    ```

    Example:
    
    ```sh
    kubectl logs superset-564564dd4-2lzb6 -f --namespace magasin-superset
    ```
    where `-f` continues displaying the new logs. 

    With `--all-containers` you can see the logs of all the containers instead of the one that is being executed. 
    This is useful when the current container of the pod gets stuck because of the previous container output was not the expected.
    Example:

    ```sh
    kubectl logs superset-564564dd4-2lzb6 --namespace magasin-superset --all-containers
    ```

