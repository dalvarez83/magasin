---
title: "Kubernetes guide"
format: html
---

A quick guide for a magasin cluster operator.

## General kubernetes

Magasin is installed in a kubernetes cluster, in this chapter you have a summary of common kubernetes commands.

### Get the list of namespaces.

Kubernetes resources are kept in namespaces. A namespace is like a folder but where you can keep kubernetes resources such as pods, secrets, etc.

```sh
kubectl get namespaces
```

### Get the list of resources

To get the resources available within a particular namespace:

```sh
kubectl get <resource-type> --namespace <namespace>
```
where `resource-type` is one of 

* `pod`, 
* `secret`, 
* `service`, 
* `pv` (persistent volume), 
* `pvc` (persitstent volume claim),

Examples:

```sh
kubectl get pods --namespace magasin-drill
kubectl get secrets --namespace magasin-drill
```
Or alternatively
```sh
kubectl get pods -n magasin-drill
```

If `--namespace` is not set, it displays the resources of the `default` namespace.

---
_Tip: to change the default namespace use the command  `kubectl config set-context --current --namespace=<namespace>` to update set the default namespace so you don't need to set `--namespace <namespace>` on each command_

----

### Get the list of secrets
A secret is a type of resource in kubernetes that allows you to keep configuration information such as usernames, tokens, database names, etc. 

To get the list of secrets of a particular namespace

```sh
kubectl get secret --namespace magasin-superset
```

In magasin, these are some secrets that contain interesting information for the admin are (format  application / secret-name):

 * magasin-dagster- / TODO-XXXX: 
 * magasin-drill / `drill-storage-plugin-secret`: contains the initial setup of the storage.
 * magasin-superset / `superset-env`: Contains the environment variables of the application.
 * magasin-daskhub / `hub-env`. Contains the environment variables of the application.


One secret may contain more than variable. To view the different variables (items) of a particular secret:
 
```sh
kubectl describe secret superset-env --namespace magasin-superset
```
where `superset-env` is the name of the secret.


# Get the contents of a secret

Secrets are usually encoded in base64 format. To get the contents of one of the keys of the secret:
 
```sh
kubectl get secret superset-env --namespace superset-staging \
-o jsonpath='{.data.SUPERSET_ADMIN}' | base64 --decode
```

### Dump a secret that contains environment variables

```sh
 kubectl get secret <secret-name> --namespace <namespace> --output=json \
 | jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'
```

Examples: 
```sh
# get superset-env
kubectl get secret superset-env -n superset-staging --output=json \
| jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'

# get daskhub-env 
kubectl get secret hub-env -n daskhub-staging --output=json \
| jq -r '.data | to_entries[] | "\(.key)=\(.value | @base64d)"'
```

